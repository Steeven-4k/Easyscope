/////CODE 7-seg

#include <xc.h>

#include <stdio.h>

#include <stdlib.h>

#include <pic18F4550.h>

 

#pragma config FOSC = HS         // Oscillateur HS

#pragma config WDT = OFF         // Désactiver le Watchdog

 

#define _XTAL_FREQ 500000

 

const unsigned char Afficheur[] = {

    0b00111111, // 0

    0b00000110, // 1

    0b01011011, // 2

    0b01001111, // 3

    0b01100110, // 4

    0b01101101, // 5

    0b01111101, // 6

    0b00000111, // 7

    0b01111111, // 8

    0b01101111  // 9

};

 

void main(void) {

    OSCCON |= 0x70; // CPU Clock set at 8MHz

 

    ADCON1 = 0x0C; // AN4 (RA5) as analog input

    ADCON0 = 0x11; // ADC Configuration: AN4 as input

 

    TRISD = 0x00; // PORTD as output for 7-segment display

    TRISA = 0b00100000; // PORTA as output for display selection

    TRISC = 0x00;

 

    ADIE = 1; // Enable ADC interrupt

    ADIF = 0; // Reset ADC interrupt flag

 

    ADON = 1; // Enable ADC

    GIE = 1; // Enable global interrupts

    PEIE = 1; // Enable peripheral interrupts

 

    while (1) {

        GO_DONE = 1;

        while (GO_DONE);

    }

}

void __interrupt() ISR() {

    // Vérifie si l'interruption du Convertisseur Analogique-Numérique (CAN) est déclenchée

    if (PIR1bits.ADIF) {

        // Calcule la tension en millivolts (mV) à partir de la valeur du registre ADRESH

        unsigned int tension_mV = (unsigned int)((double)ADRESH * 5000 / 255);

        unsigned char i;

 

        // Boucle pour afficher les chiffres de tension_mV sur un afficheur 7 segments

        for (i = 0; i < 4; i++) {

            // Affiche le chiffre le moins significatif de tension_mV sur un afficheur 7 segments

            PORTD = Afficheur[tension_mV % 10];

            // Sélectionne l'afficheur 7 segments actif sur le port A

            PORTA = (1 << i);

            // Attend pendant 50 millisecondes pour afficher le chiffre

            __delay_ms(50);

            // Désactive l'afficheur 7 segments

            PORTA = 0;

            // Divise tension_mV par 10 pour obtenir le chiffre suivant à afficher

            tension_mV /= 10;

        }

 

        // Réinitialise le drapeau d'interruption du CAN

        ADIF = 0;

    }

}
